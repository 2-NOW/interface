diff --git a/node_modules/colorthief/src/color-thief-node.js b/node_modules/colorthief/src/color-thief-node.js
index efc73b3..45fdee4 100644
--- a/node_modules/colorthief/src/color-thief-node.js
+++ b/node_modules/colorthief/src/color-thief-node.js
@@ -1,4 +1,3 @@
-const getPixels = require('get-pixels');
 const quantize = require('@lokesh.dhakar/quantize');
 
 function createPixelArray(imgData, pixelCount, quality) {
@@ -44,18 +43,6 @@ function validateOptions(options) {
     }
 }
 
-function loadImg(img) {
-    return new Promise((resolve, reject) => {
-        getPixels(img, function(err, data) {
-            if(err) {
-                reject(err)
-            } else {
-                resolve(data);
-            }
-        })
-    });
-}
-
 function getColor(img, quality) {
     return new Promise((resolve, reject) => {
         getPalette(img, 5, quality)
@@ -69,27 +56,18 @@ function getColor(img, quality) {
 
 }
 
-function getPalette(img, colorCount = 10, quality = 10) {
+function getPalette(img, colorCount = 10, quality = 8) {
     const options = validateOptions({
         colorCount,
         quality
     });
+    const pixelCount = img.length;
+    const pixelArray = createPixelArray(img, pixelCount, options.quality);
 
-    return new Promise((resolve, reject) => {
-        loadImg(img)
-            .then(imgData => {
-                const pixelCount = imgData.shape[0] * imgData.shape[1];
-                const pixelArray = createPixelArray(imgData.data, pixelCount, options.quality);
-
-                const cmap = quantize(pixelArray, options.colorCount);
-                const palette = cmap? cmap.palette() : null;
+    const cmap = quantize(pixelArray, options.colorCount);
+    const palette = cmap? cmap.palette() : null;
 
-                resolve(palette);
-            })
-            .catch(err => {
-                reject(err);
-            })
-    });
+    return palette;
 }
 
 module.exports = {
